{\rtf1\ansi\ansicpg1252\cocoartf2821
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red128\green0\blue128;}
{\*\expandedcolortbl;;\csgenericrgb\c50001\c0\c50001;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f0\fs24 \cf2 -- Produkte definieren (Essen und Getr\'e4nke)\
set productList to \{\{"Bratwurst", 2.5, "Essen"\}, \{"Salzstange", 1.5, "Essen"\}, \{"Baguette", 3.2, "Essen"\}, \{"Ochsenbraten", 9.2, "Essen"\}, \{"Falafel_mit_Dip", 6.8, "Essen"\}, \{"Cola", 1.8, "Getr\'e4nk"\}, \{"Wasser", 1.0, "Getr\'e4nk"\}, \{"Bier", 4.8, "Getr\'e4nk"\}, \{"Radler", 4.8, "Getr\'e4nk"\}\}\
\
-- Variable f\'fcr den Gesamtpreis und eine Liste der Produkte mit ihren Mengen\
set totalPrice to 0\
set orderDetails to \{\}\
\
-- Funktion zum Erstellen einer Liste mit Produkten und ihren Preisen\
on createProductListWithPrices(products)\
    set productListWithPrices to \{\}\
    repeat with product in products\
        set end of productListWithPrices to (item 1 of product & " - " & item 2 of product & "\'80")\
    end repeat\
    return productListWithPrices\
end createProductListWithPrices\
\
-- Funktion zum Filtern der Produkte nach Kategorie\
on filterProductsByCategory(products, category)\
    set filteredProducts to \{\}\
    repeat with product in products\
        if item 3 of product is category then\
            set end of filteredProducts to product\
        end if\
    end repeat\
    return filteredProducts\
end filterProductsByCategory\
\
-- Funktion zur Auswahl der Menge (1 bis 8)\
on selectQuantity()\
    set quantityChoice to choose from list \{"1", "2", "3", "4", "5", "6", "7", "8"\} with prompt "W\'e4hlen Sie eine Menge:" default items \{"1"\} without multiple selections allowed\
    if quantityChoice is false then\
        display dialog "Keine Auswahl getroffen. Programm wird beendet." buttons \{"OK"\} default button 1\
        return false\
    end if\
    return (item 1 of quantityChoice) as integer\
end selectQuantity\
\
-- Funktion zur Produktwahl mit einer Liste\
on showProductDialog(products, category)\
    set productChoice to choose from list products with prompt "W\'e4hlen Sie ein Produkt (" & category & "):" default items \{\} without multiple selections allowed\
    return productChoice\
end showProductDialog\
\
-- Funktion, um die Produktinformationen (Preis und Typ) f\'fcr ein Produkt zu erhalten\
on getProductInfo(productName, productList)\
    repeat with product in productList\
        if (item 1 of product) as string is productName as string then\
            return product -- Gibt die gesamte Produktinformation zur\'fcck \{Name, Preis, Typ\}\
        end if\
    end repeat\
    return \{\} -- Wenn das Produkt nicht gefunden wird, leere Liste zur\'fcckgeben\
end getProductInfo\
\
-- Schleife f\'fcr die Produktauswahl und Mengeneingabe\
repeat\
    -- Benutzeroberfl\'e4che f\'fcr die Auswahl einer Kategorie (Essen oder Getr\'e4nk)\
    set categoryChoice to choose from list \{"Essen", "Getr\'e4nk"\} with prompt "W\'e4hlen Sie eine Kategorie:" default items \{\} without multiple selections allowed\
    \
    if categoryChoice is false then\
        display dialog "Keine Auswahl getroffen. Programm wird beendet." buttons \{"OK"\} default button 1\
        return\
    end if\
    \
    -- Produkte nach der gew\'e4hlten Kategorie filtern\
    set selectedCategory to item 1 of categoryChoice\
    set filteredProducts to filterProductsByCategory(productList, selectedCategory)\
    \
    -- Erstelle die Liste der Produkte mit Preisen f\'fcr die ausgew\'e4hlte Kategorie\
    set productListWithPrices to createProductListWithPrices(filteredProducts)\
    \
    -- Benutzeroberfl\'e4che f\'fcr die Auswahl eines Produkts mit Preis\
    set productChoice to showProductDialog(productListWithPrices, selectedCategory)\
    \
    if productChoice is false then\
        display dialog "Keine Auswahl getroffen. Programm wird beendet." buttons \{"OK"\} default button 1\
        return\
    end if\
    \
    -- Produktnamen extrahieren (nur der Name ohne den Preis)\
    set selectedProductName to word 1 of item 1 of productChoice\
    \
    -- Produktinformationen anhand des Namens abrufen\
    set productInfo to getProductInfo(selectedProductName, filteredProducts)\
    \
    -- \'dcberpr\'fcfen, ob das Produkt in der Liste gefunden wurde\
    if productInfo is not \{\} then\
        set productPrice to item 2 of productInfo -- Preis des Produkts\
        set productType to item 3 of productInfo -- Typ des Produkts\
    else\
        display dialog "Produkt '" & selectedProductName & "' nicht gefunden!" buttons \{"OK"\} default button 1\
        return\
    end if\
    \
    -- Menge ausw\'e4hlen (1 bis 8)\
    set quantity to selectQuantity()\
    if quantity is false then return\
    \
    -- Berechnung des Gesamtpreises f\'fcr dieses Produkt und Speicherung der Bestellinformationen\
    set totalPrice to totalPrice + (productPrice * quantity)\
    set end of orderDetails to \{selectedProductName, quantity, productPrice, productPrice * quantity\}\
    \
    -- Frage, ob der Benutzer ein weiteres Produkt hinzuf\'fcgen m\'f6chte\
    set continueOrder to button returned of (display dialog "M\'f6chten Sie ein weiteres Produkt hinzuf\'fcgen?" buttons \{"Ja", "Nein"\} default button 1)\
    \
    if continueOrder is "Nein" then\
        exit repeat\
    end if\
end repeat\
\
-- Gesamtbestellung in Textform f\'fcr die Vorschau\
set orderSummary to "===============================" & return & "   Rechnung - Jugendblasorchester" & return & "===============================" & return & return\
repeat with orderItem in orderDetails\
    set productName to item 1 of orderItem\
    set quantity to item 2 of orderItem\
    set productPrice to item 3 of orderItem\
    set totalItemPrice to item 4 of orderItem\
    -- Anzahl vor dem Produktnamen\
    set orderSummary to orderSummary & quantity & "x " & productName & "  =  " & totalItemPrice & "\'80" & return\
end repeat\
set orderSummary to orderSummary & "-------------------------------" & return & "Gesamtpreis: " & totalPrice & "\'80" & return & "==============================="\
\
-- Gesamtbetrag anzeigen, bevor nach der Zahlung gefragt wird\
set highlightedTotal to return & return & "!!! WICHTIG: Gesamtbetrag = " & totalPrice & "\'80 !!!" & return & return\
display dialog orderSummary & highlightedTotal buttons \{"OK"\} default button 1\
\
-- Frage nach dem Betrag, den der Kunde bezahlt (Benutzerdefinierte Eingabe)\
set paymentAmount to text returned of (display dialog "Bitte geben Sie den Betrag ein, den der Kunde bezahlt hat:" default answer "")\
if paymentAmount is "" then\
    display dialog "Bitte geben Sie einen Betrag ein." buttons \{"OK"\} default button 1\
    return\
end if\
\
-- Umwandlung des eingegebenen Betrags in eine Zahl\
try\
    set paymentAmount to paymentAmount as real\
on error\
    display dialog "Ung\'fcltige Eingabe. Bitte geben Sie einen g\'fcltigen Betrag ein." buttons \{"OK"\} default button 1\
    return\
end try\
\
-- Berechnung des R\'fcckgelds\
set changeAmount to paymentAmount - totalPrice\
\
-- R\'fcckgeld anzeigen\
set changeSummary to return & "Bezahlter Betrag: " & paymentAmount & "\'80" & return & "Gesamtbetrag: " & totalPrice & "\'80" & return & return & "R\'fcckgeld: " & changeAmount & "\'80"\
\
-- Bestellung und R\'fcckgeld in Rechnung integrieren\
set finalSummary to orderSummary & return & changeSummary\
\
-- Klarer gestaltete Abschlussrechnung anzeigen\
set footerText to return & return & "!!! **_Vielen Dank, dass Du mit uns feierst!!!_**" & return & return & "!!! **_Bitte gehe mit Deiner Rechnung an die jeweilige Ausgabetheke._** !!!"\
display dialog "===============================" & return & "   Abschlussrechnung" & return & "===============================" & return & return & finalSummary & footerText & return & "===============================" buttons \{"OK"\} default button 1\
\
-- Frage, ob die Rechnung gedruckt werden soll\
set printChoice to button returned of (display dialog "M\'f6chten Sie die Rechnung drucken?" buttons \{"Ja", "Nein"\} default button 1)\
\
if printChoice is "Ja" then\
    -- Rechnung als Textdatei vorbereiten\
    set tempFile to ((path to desktop folder as text) & "Rechnung.txt")\
    set fileRef to open for access file tempFile with write permission\
    try\
        write finalSummary & footerText to fileRef\
        close access fileRef\
    on error\
        close access fileRef\
        display dialog "Fehler beim Erstellen der Druckdatei." buttons \{"OK"\} default button 1\
        return\
    end try\
    \
    -- Druckbefehl\
    do shell script "lp -o media=A6 -o fit-to-page " & quoted form of POSIX path of tempFile\
    \
    -- Best\'e4tigung f\'fcr den Druck\
    display dialog "Die Rechnung wurde erfolgreich gedruckt." buttons \{"OK"\} default button 1\
end if}